## A good ref for this: https://gist.github.com/maratori/47a4d00457a92aa426dbd48a18776322

run:
  timeout: 5m
  tests: true

linters:
  enable:
    - asasalint # checks for pass []any as any in variadic func(...any)
    - asciicheck # checks that your code does not contain non-ASCII identifiers
    - bidichk # checks for dangerous unicode character sequences
    - bodyclose
    - containedctx
    - cyclop # checks function and package cyclomatic complexity
    - decorder # checks declaration order and count of types, constants, variables and functions
    - depguard
    - dogsled
    - durationcheck # checks for two durations multiplied together
    - errcheck
    - errname
    - errorlint
    - exhaustive # checks exhaustiveness of enum switch statements
    - exportloopref # checks for pointers to enclosing loop variables
    - gci
    - gochecknoinits # checks that no init functions are present in Go code
    - gocritic
    - gosimple
    - govet
    - importas # enforces consistent import aliases
    - ineffassign
    - loggercheck
    - makezero # finds slice declarations with non-zero initial length
    - misspell
    - musttag # enforces field tags in (un)marshaled structs
    - nakedret
    - nestif # reports deeply nested if statements
    - nilerr # finds the code that returns nil even if it checks that the error is not nil
    - nilnil # checks that there is no simultaneous return of nil error and an invalid value
    - noctx # finds sending http request without context.Context
    - nolintlint # reports ill-formed or insufficient nolint directives
    - nonamedreturns # reports all named returns
    - paralleltest # detects missing usage of t.Parallel() method in your Go test
    - predeclared # finds code that shadows one of Go's predeclared identifiers
    - promlinter
    - reassign # checks that package variables are not reassigned
    - revive # fast, configurable, extensible, flexible, and beautiful linter for Go, drop-in replacement of golint
    - rowserrcheck
    - sqlclosecheck
    - staticcheck
    - stylecheck
    - tagliatelle # checks the struct tags
    - tenv
    - thelper # detects golang test helpers without t.Helper() call and checks the consistency of test helpers
    - tparallel # detects inappropriate usage of t.Parallel() method in your Go test codes
    - unconvert
    - unconvert # removes unnecessary type conversions
    - unparam # reports unused function parameters
    - unused
    - usestdlibvars # detects the possibility to use variables/constants from the Go standard library
    - wastedassign # finds wasted assignment statements
    - whitespace # detects leading and trailing whitespace

linters-settings:
  cyclop:
    # The maximal code complexity to report.
    # Default: 10
    max-complexity: 20
    # The maximal average package complexity.
    # If it's higher than 0.0 (float) the check is enabled
    # Default: 0.0
    package-average: 10.0

  depguard:
    list-type: blacklist
    packages:
      - github.com/gogo/status
      - github.com/gogo/codes
      - github.com/gogo/protobuf

  gci:
    skip-generated: true
    custom-order: true
    sections:
      - standard # Standard section: captures all standard packages.
      - default # Default section: contains all imports that could not be matched to another section type.
      - prefix(github.com/jjtimmons)

  exhaustive:
    # Program elements to check for exhaustiveness.
    # Default: [ switch ]
    check:
      - switch
      - map

  gocritic:
    settings:
      captLocal:
        # Whether to restrict checker to params only.
        # Default: true
        paramsOnly: false
      underef:
        # Whether to skip (*x).method() calls where x is a pointer receiver.
        # Default: true
        skipRecvDeref: false

  govet:
    enable-all: true
    disable:
      - fieldalignment # too strict

  misspell:
    locale: US

  nakedret:
    max-func-lines: 0

  nestif:
    # Minimal complexity of if statements to report.
    # Default: 5
    min-complexity: 4

  nolintlint:
    # Enable to require an explanation of nonzero length after each nolint directive.
    # Default: false
    require-explanation: true

  rowserrcheck:
    # database/sql is always checked
    # Default: []
    packages:
      - github.com/jmoiron/sqlx

  stylecheck:
    checks: ["all"]

issues:
  include:
    - EXC0001 # Error return value of x is not checked
    - EXC0012 # exported (.+) should have comment( \(or a comment on this block\))? or be unexported
    - EXC0013 # package comment should be of the form "(.+)...
    - EXC0014 # comment on exported (.+) should be of the form "(.+)..."
    - EXC0015 # should have a package comment

  exclude:
    - ifElseChain
